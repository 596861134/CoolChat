package com.cooloongwu.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.cooloongwu.coolchat.entity.ChatFriend;
import com.cooloongwu.coolchat.entity.Contact;
import com.cooloongwu.coolchat.entity.Conversation;
import com.cooloongwu.coolchat.entity.Group;

import com.cooloongwu.greendao.gen.ChatFriendDao;
import com.cooloongwu.greendao.gen.ContactDao;
import com.cooloongwu.greendao.gen.ConversationDao;
import com.cooloongwu.greendao.gen.GroupDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig chatFriendDaoConfig;
    private final DaoConfig contactDaoConfig;
    private final DaoConfig conversationDaoConfig;
    private final DaoConfig groupDaoConfig;

    private final ChatFriendDao chatFriendDao;
    private final ContactDao contactDao;
    private final ConversationDao conversationDao;
    private final GroupDao groupDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        chatFriendDaoConfig = daoConfigMap.get(ChatFriendDao.class).clone();
        chatFriendDaoConfig.initIdentityScope(type);

        contactDaoConfig = daoConfigMap.get(ContactDao.class).clone();
        contactDaoConfig.initIdentityScope(type);

        conversationDaoConfig = daoConfigMap.get(ConversationDao.class).clone();
        conversationDaoConfig.initIdentityScope(type);

        groupDaoConfig = daoConfigMap.get(GroupDao.class).clone();
        groupDaoConfig.initIdentityScope(type);

        chatFriendDao = new ChatFriendDao(chatFriendDaoConfig, this);
        contactDao = new ContactDao(contactDaoConfig, this);
        conversationDao = new ConversationDao(conversationDaoConfig, this);
        groupDao = new GroupDao(groupDaoConfig, this);

        registerDao(ChatFriend.class, chatFriendDao);
        registerDao(Contact.class, contactDao);
        registerDao(Conversation.class, conversationDao);
        registerDao(Group.class, groupDao);
    }

    public void clear() {
        chatFriendDaoConfig.clearIdentityScope();
        contactDaoConfig.clearIdentityScope();
        conversationDaoConfig.clearIdentityScope();
        groupDaoConfig.clearIdentityScope();
    }

    public ChatFriendDao getChatFriendDao() {
        return chatFriendDao;
    }

    public ContactDao getContactDao() {
        return contactDao;
    }

    public ConversationDao getConversationDao() {
        return conversationDao;
    }

    public GroupDao getGroupDao() {
        return groupDao;
    }

}
